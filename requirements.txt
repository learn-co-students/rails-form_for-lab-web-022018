Models - Create a SchoolClass model, along with its associated database table.
The SchoolClass table should have the columns: title:string and room_number:integer.
The Student model and database table have already been created for you.


##################################################
Controllers - Create controller files for school_classes and students.
Build out the new, create, show, edit, and update actions in each of the controllers.

Views - Create a show page for each resource, along with new and edit forms.

You will also need to create routes for each path mentioned above.

The tests for this application are located in the spec/controllers/, spec/features/, and spec/models/ directories.

REQUIREMENTS
Utilize the form_for methods for all four of the forms and integrate each form_for call with the respective controller
 actions. Also make sure to utilize the <%= f.submit %> submit button syntax to have the button text automatically
 generated.

Since you're using form_for, make sure you are using strong parameters for the controller create and update actions,
 if you don't remember how to do it, here is how we implemented strong params in the README:
 @post.update(params.require(:post).permit(:title, :description)).
 (hint: you can pass the strong parameter call to the new method just like we did on update)

If you run into issues drawing the routes, inspect element on the forms to see what path form_for is automatically
trying to pass the form data to.
